.TH "Button" 3 "Mon Nov 25 2013" "Version 1.0" "Swird-Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Button \- 
.PP
La classe de gestion des boutons\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Button\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBButton\fP (int x, int y)"
.br
.RI "\fIConstructeur\&. \fP"
.ti -1c
.RI "virtual \fB~Button\fP ()"
.br
.RI "\fIDestructeur\&. \fP"
.ti -1c
.RI "SDL_Rect \fBGetbuttonPosition\fP ()"
.br
.RI "\fIaccesseur de l'attribut buttonPosition \fP"
.ti -1c
.RI "void \fBSetbuttonPosition\fP (SDL_Rect val)"
.br
.RI "\fIsetteur de l'attribut ButtonPosition \fP"
.ti -1c
.RI "void \fBapplyButton\fP (SDL_Surface *surface)"
.br
.RI "\fImise en place du bouton sur une surface \fP"
.ti -1c
.RI "bool \fBcheckClick\fP (int mouseX, int mouseY)"
.br
.RI "\fIvérification du clique sur le bouton \fP"
.ti -1c
.RI "void \fBsetState\fP (int state)"
.br
.RI "\fIchangement d'état du bouton \fP"
.ti -1c
.RI "void \fBfree\fP ()"
.br
.RI "\fIlibération de la mémoire \fP"
.ti -1c
.RI "void \fBinit\fP (const char *path1, const char *path2)"
.br
.RI "\fIinitialisation du bouton \fP"
.in -1c
.SH "Detailed Description"
.PP 
La classe de gestion des boutons\&. 
.PP
Definition at line 26 of file Button\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBButton::Button\fP (intx, inty)"
.PP
Constructeur\&. Constructeur de la classe \fBButton\fP 
.PP
Definition at line 6 of file Button\&.cpp\&.
.SS "\fBButton::~Button\fP ()\fC [virtual]\fP"
.PP
Destructeur\&. destructeur de la classe \fBButton\fP 
.PP
Definition at line 49 of file Button\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void \fBButton::applyButton\fP (SDL_Surface *surface)"
.PP
mise en place du bouton sur une surface methode qui permet de mettre en place le bouton sur une surface 
.PP
\fBParameters:\fP
.RS 4
\fISDL_surface\fP la surface sur laquelle on 'place' l'image 
.RE
.PP

.PP
Definition at line 25 of file Button\&.cpp\&.
.SS "bool \fBButton::checkClick\fP (intmouseX, intmouseY)"
.PP
vérification du clique sur le bouton methode qui permet de s'assurer qu'on clique sur le bouton 
.PP
\fBParameters:\fP
.RS 4
\fIentier\fP mouseX l'abscisse du clique sur l'écran 
.br
\fIentier\fP mousey l'ordonnée du clique sur l'écran 
.RE
.PP
\fBReturns:\fP
.RS 4
booléen true si le clique est bien sur le bouton,false sinon 
.RE
.PP

.PP
Definition at line 33 of file Button\&.cpp\&.
.SS "void \fBButton::free\fP ()"
.PP
libération de la mémoire methode qui permet de la mémoire liée à la surface utilisé pour le bouton 
.PP
Definition at line 43 of file Button\&.cpp\&.
.SS "SDL_Rect \fBButton::GetbuttonPosition\fP ()\fC [inline]\fP"
.PP
accesseur de l'attribut buttonPosition Methode qui retourne la SDL_Rec du boutton 
.PP
\fBReturns:\fP
.RS 4
SDL_Rec ; 
.RE
.PP

.PP
Definition at line 53 of file Button\&.h\&.
.SS "void \fBButton::init\fP (const char *path1, const char *path2)"
.PP
initialisation du bouton methode qui permet d'initialiser le bouton avec le chemin d'accès au images correspondante 
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP char* , le chemin d'accès à la première image 
.br
\fIconst\fP char*, le chemin d'accès à la deuxième image 
.RE
.PP

.PP
Definition at line 14 of file Button\&.cpp\&.
.SS "void \fBButton::SetbuttonPosition\fP (SDL_Rectval)\fC [inline]\fP"
.PP
setteur de l'attribut ButtonPosition Methode qui affecte une valeur a l'attribut buttonPosition 
.PP
\fBParameters:\fP
.RS 4
\fISDL_Rec\fP : une nouvelle SDL_Rec 
.RE
.PP

.PP
Definition at line 62 of file Button\&.h\&.
.SS "void \fBButton::setState\fP (intstate)"
.PP
changement d'état du bouton methode qui permet de changer l'état du bouton 
.PP
\fBParameters:\fP
.RS 4
\fIentier\fP correspondant a un état 
.RE
.PP

.PP
Definition at line 38 of file Button\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Swird-Project from the source code\&.
